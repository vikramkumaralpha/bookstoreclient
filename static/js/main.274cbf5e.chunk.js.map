{"version":3,"sources":["services/user/userActions.js","services/user/userTypes.js","services/user/auth/authActions.js","services/user/auth/authTypes.js","services/book/bookActions.js","services/book/bookTypes.js","components/NavigationBar.js","components/Welcome.js","components/MyToast.js","components/Book/Book.js","components/Book/BookList.js","components/User/UserList.js","components/User/Register.js","components/User/Login.js","components/Footer.js","utils/authToken.js","components/Home.js","App.js","serviceWorker.js","services/user/userReducer.js","services/user/auth/authReducer.js","services/book/bookReducer.js","services/rootReducer.js","services/store.js","index.js"],"names":["userRequest","type","userSavedSuccess","user","payload","userSuccess","users","userFailure","error","loginRequest","logoutRequest","success","isLoggedIn","failure","bookSuccess","book","bookFailure","NavigationBar","auth","useSelector","state","dispatch","useDispatch","guestLinks","className","Nav","to","icon","faUserPlus","faSignInAlt","userLinks","onClick","localStorage","removeItem","username","faSignOutAlt","Navbar","bg","variant","expand","src","width","height","alt","Welcome","props","useState","quotes","setQuotes","useEffect","axios","get","then","response","data","Card","text","Header","Body","style","overflowY","map","quote","id","key","author","MyToast","show","position","top","right","zIndex","boxShadow","Toast","closeButton","message","Book","initialState","title","coverPhotoURL","isbnNumber","price","language","genre","findAllLanguages","fetchLanguages","setTimeout","bookLanguages","bookObject","languages","setState","value","display","concat","findAllGenres","fetchGenres","bookGenres","genres","findBookById","bookId","fetchBook","resetBook","submitBook","event","preventDefault","saveBook","method","updateBook","bookChange","target","name","bookList","history","push","this","match","params","faEdit","faPlusSquare","Form","onReset","onSubmit","Row","Group","as","Col","controlId","Label","Control","required","autoComplete","onChange","placeholder","InputGroup","Append","Image","roundedRight","custom","Footer","textAlign","Button","size","faSave","faUndo","faList","Component","connect","post","catch","put","BookList","sortData","sortDir","findAllBooks","currentPage","deleteBook","changePage","targetPage","parseInt","search","searchData","firstPage","prevPage","lastPage","condition","Math","ceil","totalElements","booksPerPage","nextPage","searchChange","cancelSearch","books","content","totalPages","number","console","log","float","FormControl","faSearch","faTimes","Table","bordered","hover","striped","length","align","colSpan","roundedCircle","ButtonGroup","faTrash","Prepend","disabled","faFastBackward","faStepBackward","faStepForward","faFastForward","delete","UserList","usersLength","userData","usersPerPage","fetchUsers","lastIndex","firstIndex","currentUsers","slice","Alert","faUsers","index","first","last","email","address","created","balance","Register","setShow","setMessage","password","mobile","setUser","userChange","resetRegisterForm","xs","backgroundColor","Text","faUser","faEnvelope","faLock","faPhone","userObject","a","Promise","resolve","reject","color","Login","setError","credentialChange","resetLoginForm","onClose","dismissible","setItem","token","fullYear","setFullYear","Date","getFullYear","fixed","Container","lg","authToken","defaults","headers","common","Home","jwtToken","fontSize","App","window","onbeforeunload","e","returnValue","path","exact","component","Boolean","location","hostname","reducer","action","rootReducer","combineReducers","userReducer","bookReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.274cbf5e.chunk.js","sourcesContent":["import * as UT from \"./userTypes\";\nimport axios from \"axios\";\n\nconst REGISTER_URL = \"/rest/user/register\";\n\nexport const fetchUsers = () => {\n  return (dispatch) => {\n    dispatch(userRequest());\n    axios\n      .get(\n        \"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\"\n      )\n      .then((response) => {\n        dispatch(userSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(userFailure(error.message));\n      });\n  };\n};\n\nexport const registerUser = (userObject) => async (dispatch) => {\n  dispatch(userRequest());\n  try {\n    const response = await axios.post(REGISTER_URL, userObject);\n    dispatch(userSavedSuccess(response.data));\n    return Promise.resolve(response.data);\n  } catch (error) {\n    dispatch(userFailure(error.message));\n    return Promise.reject(error);\n  }\n};\n\nconst userRequest = () => {\n  return {\n    type: UT.USER_REQUEST,\n  };\n};\n\nconst userSavedSuccess = (user) => {\n  return {\n    type: UT.USER_SAVED_SUCCESS,\n    payload: user,\n  };\n};\n\nconst userSuccess = (users) => {\n  return {\n    type: UT.USER_SUCCESS,\n    payload: users,\n  };\n};\n\nconst userFailure = (error) => {\n  return {\n    type: UT.USER_FAILURE,\n    payload: error,\n  };\n};\n","export const USER_REQUEST = \"USER_REQUEST\";\nexport const USER_SUCCESS = \"USER_SUCCESS\";\nexport const USER_FAILURE = \"USER_FAILURE\";\nexport const USER_SAVED_SUCCESS = \"USER_SAVED_SUCCESS\";\n","import * as AT from \"./authTypes\";\nimport axios from \"axios\";\n\nconst AUTH_URL = \"/rest/user/authenticate\";\n\nexport const authenticateUser = (email, password) => async (dispatch) => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post(AUTH_URL, {\n      email: email,\n      password: password,\n    });\n    localStorage.setItem(\"jwtToken\", response.data.token);\n    dispatch(success({ username: response.data.name, isLoggedIn: true }));\n    return Promise.resolve(response.data);\n  } catch (error) {\n    dispatch(failure());\n    return Promise.reject(error);\n  }\n};\n\nexport const logoutUser = () => {\n  return (dispatch) => {\n    dispatch(logoutRequest());\n    localStorage.removeItem(\"jwtToken\");\n    dispatch(success({ username: \"\", isLoggedIn: false }));\n  };\n};\n\nconst loginRequest = () => {\n  return {\n    type: AT.LOGIN_REQUEST,\n  };\n};\n\nconst logoutRequest = () => {\n  return {\n    type: AT.LOGOUT_REQUEST,\n  };\n};\n\nconst success = (isLoggedIn) => {\n  return {\n    type: AT.SUCCESS,\n    payload: isLoggedIn,\n  };\n};\n\nconst failure = () => {\n  return {\n    type: AT.FAILURE,\n    payload: false,\n  };\n};\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\n","import * as BT from \"./bookTypes\";\nimport axios from \"axios\";\n\nexport const saveBook = (book) => {\n  return (dispatch) => {\n    dispatch({\n      type: BT.SAVE_BOOK_REQUEST,\n    });\n    axios\n      .post(\"/rest/books\", book)\n      .then((response) => {\n        dispatch(bookSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(bookFailure(error));\n      });\n  };\n};\n\nexport const fetchBook = (bookId) => {\n  return (dispatch) => {\n    dispatch({\n      type: BT.FETCH_BOOK_REQUEST,\n    });\n    axios\n      .get(\"/rest/books/\" + bookId)\n      .then((response) => {\n        dispatch(bookSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(bookFailure(error));\n      });\n  };\n};\n\nexport const updateBook = (book) => {\n  return (dispatch) => {\n    dispatch({\n      type: BT.UPDATE_BOOK_REQUEST,\n    });\n    axios\n      .put(\"/rest/books\", book)\n      .then((response) => {\n        dispatch(bookSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(bookFailure(error));\n      });\n  };\n};\n\nexport const deleteBook = (bookId) => {\n  return (dispatch) => {\n    dispatch({\n      type: BT.DELETE_BOOK_REQUEST,\n    });\n    axios\n      .delete(\"/rest/books/\" + bookId)\n      .then((response) => {\n        dispatch(bookSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(bookFailure(error));\n      });\n  };\n};\n\nconst bookSuccess = (book) => {\n  return {\n    type: BT.BOOK_SUCCESS,\n    payload: book,\n  };\n};\n\nconst bookFailure = (error) => {\n  return {\n    type: BT.BOOK_FAILURE,\n    payload: error,\n  };\n};\n\nexport const fetchLanguages = () => {\n  return (dispatch) => {\n    dispatch({\n      type: BT.FETCH_LANGUAGES_REQUEST,\n    });\n    axios\n      .get(\"/rest/books/languages\")\n      .then((response) => {\n        dispatch({\n          type: BT.LANGUAGES_SUCCESS,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: BT.LANGUAGES_FAILURE,\n          payload: error,\n        });\n      });\n  };\n};\n\nexport const fetchGenres = () => {\n  return (dispatch) => {\n    dispatch({\n      type: BT.FETCH_GENRES_REQUEST,\n    });\n    axios\n      .get(\"/rest/books/genres\")\n      .then((response) => {\n        dispatch({\n          type: BT.GENRES_SUCCESS,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: BT.GENRES_FAILURE,\n          payload: error,\n        });\n      });\n  };\n};\n","export const SAVE_BOOK_REQUEST = \"SAVE_BOOK_REQUEST\";\nexport const FETCH_BOOK_REQUEST = \"FETCH_BOOK_REQUEST\";\nexport const UPDATE_BOOK_REQUEST = \"UPDATE_BOOK_REQUEST\";\nexport const DELETE_BOOK_REQUEST = \"DELETE_BOOK_REQUEST\";\nexport const BOOK_SUCCESS = \"BOOK_SUCCESS\";\nexport const BOOK_FAILURE = \"BOOK_FAILURE\";\n\nexport const FETCH_LANGUAGES_REQUEST = \"FETCH_LANGUAGES_REQUEST\";\nexport const LANGUAGES_SUCCESS = \"LANGUAGES_SUCCESS\";\nexport const LANGUAGES_FAILURE = \"LANGUAGES_FAILURE\";\n\nexport const FETCH_GENRES_REQUEST = \"FETCH_GENRES_REQUEST\";\nexport const GENRES_SUCCESS = \"GENRES_SUCCESS\";\nexport const GENRES_FAILURE = \"GENRES_FAILURE\";\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserPlus,\n  faSignInAlt,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { logoutUser } from \"../services/index\";\n\nconst NavigationBar = () => {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const logout = () => {\n    dispatch(logoutUser());\n  };\n\n  const guestLinks = (\n    <>\n      <div className=\"mr-auto\"></div>\n      <Nav className=\"navbar-right\">\n        <Link to={\"register\"} className=\"nav-link\">\n          <FontAwesomeIcon icon={faUserPlus} /> Register\n        </Link>\n        <Link to={\"login\"} className=\"nav-link\">\n          <FontAwesomeIcon icon={faSignInAlt} /> Login\n        </Link>\n      </Nav>\n    </>\n  );\n  const userLinks = (\n    <>\n      <Nav className=\"mr-auto\">\n        <Link to={\"add\"} className=\"nav-link\">\n          Add Book\n        </Link>\n        <Link to={\"list\"} className=\"nav-link\">\n          Book List\n        </Link>\n        <Link to={\"users\"} className=\"nav-link\">\n          User List\n        </Link>\n      </Nav>\n      <Nav className=\"navbar-right\">\n        <Link to={\"logout\"} className=\"nav-link\" onClick={logout}>\n          <FontAwesomeIcon icon={faSignOutAlt} /> Logout\n        </Link>\n      </Nav>\n    </>\n  );\n\n  return (\n    <Navbar bg=\"success\" variant=\"dark\" expand=\"lg\">\n      <Link to={auth.isLoggedIn ? \"home\" : \"\"} className=\"navbar-brand\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/b/ba/Book_icon_1.png\"\n          width=\"25\"\n          height=\"25\"\n          alt=\"brand\"\n        />{\" \"}\n        Book Store\n      </Link>\n      {auth.isLoggedIn ? userLinks : guestLinks}\n    </Navbar>\n  );\n};\n\nexport default NavigationBar;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst Welcome = (props) => {\n  const [quotes, setQuotes] = useState(\"\");\n\n  useEffect(() => {\n    if (quotes === \"\") {\n      axios.get(\"https://type.fit/api/quotes\").then((response) => {\n        setQuotes(response.data);\n      });\n    }\n  }, [quotes]);\n\n  return (\n    <Card bg=\"light\" text=\"dark\">\n      <Card.Header>Quotes</Card.Header>\n      <Card.Body style={{ overflowY: \"auto\", height: \"570px\" }}>\n        {quotes &&\n          quotes.map((quote, id) => (\n            <blockquote className=\"blockquote mb-0\" key={id}>\n              <p>{quote.text}</p>\n              <footer className=\"blockquote-footer\">{quote.author}</footer>\n            </blockquote>\n          ))}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Welcome;\n","import React from \"react\";\nimport { Toast } from \"react-bootstrap\";\n\nconst MyToast = (props) => {\n  const toastCss = {\n    position: \"fixed\",\n    top: \"10px\",\n    right: \"10px\",\n    zIndex: \"1\",\n    boxShadow:\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n  };\n\n  return (\n    <div style={props.show ? toastCss : null}>\n      <Toast\n        className={`border text-white ${\n          props.type === \"success\"\n            ? \"border-success bg-success\"\n            : \"border-danger bg-danger\"\n        }`}\n        show={props.show}\n      >\n        <Toast.Header\n          className={`text-white ${\n            props.type === \"success\" ? \"bg-success\" : \"bg-danger\"\n          }`}\n          closeButton={false}\n        >\n          <strong className=\"mr-auto\">Success</strong>\n        </Toast.Header>\n        <Toast.Body>{props.message}</Toast.Body>\n      </Toast>\n    </div>\n  );\n};\n\nexport default MyToast;\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  saveBook,\n  fetchBook,\n  updateBook,\n  fetchLanguages,\n  fetchGenres,\n} from \"../../services/index\";\n\nimport { Card, Form, Button, Col, InputGroup, Image } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSave,\n  faPlusSquare,\n  faUndo,\n  faList,\n  faEdit,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MyToast from \"../MyToast\";\n\nclass Book extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n    this.state = {\n      genres: [],\n      languages: [],\n      show: false,\n    };\n  }\n\n  initialState = {\n    id: \"\",\n    title: \"\",\n    author: \"\",\n    coverPhotoURL: \"\",\n    isbnNumber: \"\",\n    price: \"\",\n    language: \"\",\n    genre: \"\",\n  };\n\n  componentDidMount() {\n    const bookId = +this.props.match.params.id;\n    if (bookId) {\n      this.findBookById(bookId);\n    }\n    this.findAllLanguages();\n  }\n\n  findAllLanguages = () => {\n    this.props.fetchLanguages();\n    setTimeout(() => {\n      let bookLanguages = this.props.bookObject.languages;\n      if (bookLanguages) {\n        this.setState({\n          languages: [{ value: \"\", display: \"Select Language\" }].concat(\n            bookLanguages.map((language) => {\n              return { value: language, display: language };\n            })\n          ),\n        });\n        this.findAllGenres();\n      }\n    }, 100);\n  };\n\n  findAllGenres = () => {\n    this.props.fetchGenres();\n    setTimeout(() => {\n      let bookGenres = this.props.bookObject.genres;\n      if (bookGenres) {\n        this.setState({\n          genres: [{ value: \"\", display: \"Select Genre\" }].concat(\n            bookGenres.map((genre) => {\n              return { value: genre, display: genre };\n            })\n          ),\n        });\n      }\n    }, 100);\n  };\n\n  findBookById = (bookId) => {\n    this.props.fetchBook(bookId);\n    setTimeout(() => {\n      let book = this.props.bookObject.book;\n      if (book != null) {\n        this.setState({\n          id: book.id,\n          title: book.title,\n          author: book.author,\n          coverPhotoURL: book.coverPhotoURL,\n          isbnNumber: book.isbnNumber,\n          price: book.price,\n          language: book.language,\n          genre: book.genre,\n        });\n      }\n    }, 1000);\n  };\n\n  resetBook = () => {\n    this.setState(() => this.initialState);\n  };\n\n  submitBook = (event) => {\n    event.preventDefault();\n\n    const book = {\n      title: this.state.title,\n      author: this.state.author,\n      coverPhotoURL: this.state.coverPhotoURL,\n      isbnNumber: this.state.isbnNumber,\n      price: this.state.price,\n      language: this.state.language,\n      genre: this.state.genre,\n    };\n\n    this.props.saveBook(book);\n    setTimeout(() => {\n      if (this.props.bookObject.book != null) {\n        this.setState({ show: true, method: \"post\" });\n        setTimeout(() => this.setState({ show: false }), 3000);\n      } else {\n        this.setState({ show: false });\n      }\n    }, 2000);\n    this.setState(this.initialState);\n  };\n\n  updateBook = (event) => {\n    event.preventDefault();\n\n    const book = {\n      id: this.state.id,\n      title: this.state.title,\n      author: this.state.author,\n      coverPhotoURL: this.state.coverPhotoURL,\n      isbnNumber: this.state.isbnNumber,\n      price: this.state.price,\n      language: this.state.language,\n      genre: this.state.genre,\n    };\n    this.props.updateBook(book);\n    setTimeout(() => {\n      if (this.props.bookObject.book != null) {\n        this.setState({ show: true, method: \"put\" });\n        setTimeout(() => this.setState({ show: false }), 3000);\n      } else {\n        this.setState({ show: false });\n      }\n    }, 2000);\n    this.setState(this.initialState);\n  };\n\n  bookChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  bookList = () => {\n    return this.props.history.push(\"/list\");\n  };\n\n  render() {\n    const { title, author, coverPhotoURL, isbnNumber, price, language, genre } =\n      this.state;\n\n    return (\n      <div>\n        <div style={{ display: this.state.show ? \"block\" : \"none\" }}>\n          <MyToast\n            show={this.state.show}\n            message={\n              this.state.method === \"put\"\n                ? \"Book Updated Successfully.\"\n                : \"Book Saved Successfully.\"\n            }\n            type={\"success\"}\n          />\n        </div>\n        <Card className={\"border \"}>\n          <Card.Header>\n            <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} />{\" \"}\n            {this.state.id ? \"Update Book\" : \"Add New Book\"}\n          </Card.Header>\n          <Form\n            onReset={this.resetBook}\n            onSubmit={this.state.id ? this.updateBook : this.submitBook}\n            id=\"bookFormId\"\n          >\n            <Card.Body>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridTitle\">\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control\n                    required\n                    autoComplete=\"off\"\n                    type=\"test\"\n                    name=\"title\"\n                    value={title}\n                    onChange={this.bookChange}\n                    className={\"\"}\n                    placeholder=\"Enter Book Title\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridAuthor\">\n                  <Form.Label>Author</Form.Label>\n                  <Form.Control\n                    required\n                    autoComplete=\"off\"\n                    type=\"test\"\n                    name=\"author\"\n                    value={author}\n                    onChange={this.bookChange}\n                    className={\"\"}\n                    placeholder=\"Enter Book Author\"\n                  />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCoverPhotoURL\">\n                  <Form.Label>Cover Photo URL</Form.Label>\n                  <InputGroup>\n                    <Form.Control\n                      required\n                      autoComplete=\"off\"\n                      type=\"test\"\n                      name=\"coverPhotoURL\"\n                      value={coverPhotoURL}\n                      onChange={this.bookChange}\n                      className={\"\"}\n                      placeholder=\"Enter Book Cover Photo URL\"\n                    />\n                    <InputGroup.Append>\n                      {this.state.coverPhotoURL !== \"\" && (\n                        <Image\n                          src={this.state.coverPhotoURL}\n                          roundedRight\n                          width=\"40\"\n                          height=\"38\"\n                        />\n                      )}\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridISBNNumber\">\n                  <Form.Label>ISBN Number</Form.Label>\n                  <Form.Control\n                    required\n                    autoComplete=\"off\"\n                    type=\"test\"\n                    name=\"isbnNumber\"\n                    value={isbnNumber}\n                    onChange={this.bookChange}\n                    className={\"\"}\n                    placeholder=\"Enter Book ISBN Number\"\n                  />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridPrice\">\n                  <Form.Label>Price</Form.Label>\n                  <Form.Control\n                    required\n                    autoComplete=\"off\"\n                    type=\"test\"\n                    name=\"price\"\n                    value={price}\n                    onChange={this.bookChange}\n                    className={\"\"}\n                    placeholder=\"Enter Book Price\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridLanguage\">\n                  <Form.Label>Language</Form.Label>\n                  <Form.Control\n                    \n                    as=\"select\"\n                    custom\n                    onChange={this.bookChange}\n                    name=\"language\"\n                    value={language}\n                    className={\"\"}\n                  >\n                    {this.state.languages.map((language) => (\n                      <option key={language.value} value={language.value}>\n                        {language.display}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridGenre\">\n                  <Form.Label>Genre</Form.Label>\n                  <Form.Control\n                    \n                    as=\"select\"\n                    custom\n                    onChange={this.bookChange}\n                    name=\"genre\"\n                    value={genre}\n                    className={\"\"}\n                  >\n                    {this.state.genres.map((genre) => (\n                      <option key={genre.value} value={genre.value}>\n                        {genre.display}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Card.Body>\n            <Card.Footer style={{ textAlign: \"right\" }}>\n              <Button size=\"sm\" variant=\"success\" type=\"submit\">\n                <FontAwesomeIcon icon={faSave} />{\" \"}\n                {this.state.id ? \"Update\" : \"Save\"}\n              </Button>{\" \"}\n              <Button size=\"sm\" variant=\"outline-secondary\" type=\"reset\">\n                <FontAwesomeIcon icon={faUndo} /> Reset\n              </Button>{\" \"}\n              <Button\n                size=\"sm\"\n                variant=\"primary\"\n                type=\"button\"\n                onClick={() => this.bookList()}\n              >\n                <FontAwesomeIcon icon={faList} /> Book List\n              </Button>\n            </Card.Footer>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bookObject: state.book,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveBook: (book) => dispatch(saveBook(book)),\n    fetchBook: (bookId) => dispatch(fetchBook(bookId)),\n    updateBook: (book) => dispatch(updateBook(book)),\n    fetchLanguages: () => dispatch(fetchLanguages()),\n    fetchGenres: () => dispatch(fetchGenres()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { deleteBook } from \"../../services/index\";\n\nimport \"./../../assets/css/Style.css\";\nimport {\n  Card,\n  Table,\n  Image,\n  ButtonGroup,\n  Button,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faEdit,\n  faTrash,\n  faStepBackward,\n  faFastBackward,\n  faStepForward,\n  faFastForward,\n  faSearch,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport MyToast from \"../MyToast\";\nimport axios from \"axios\";\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      search: \"\",\n      currentPage: 1,\n      booksPerPage: 5,\n      sortDir: \"asc\",\n    };\n  }\n\n  sortData = () => {\n    setTimeout(() => {\n      this.state.sortDir === \"asc\"\n        ? this.setState({ sortDir: \"desc\" })\n        : this.setState({ sortDir: \"asc\" });\n      this.findAllBooks(this.state.currentPage);\n    }, 500);\n  };\n\n  componentDidMount() {\n    this.findAllBooks(this.state.currentPage);\n  }\n\n  findAllBooks(currentPage) {\n    currentPage -= 1;\n    axios\n      .get(\n        \"/rest/books?pageNumber=\" +\n          currentPage +\n          \"&pageSize=\" +\n          this.state.booksPerPage +\n          \"&sortBy=price&sortDir=\" +\n          this.state.sortDir\n      )\n      .then((response) => response.data)\n      .then((data) => {\n        this.setState({\n          books: data.content,\n          totalPages: data.totalPages,\n          totalElements: data.totalElements,\n          currentPage: data.number + 1,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        localStorage.removeItem(\"jwtToken\");\n        this.props.history.push(\"/\");\n      });\n  }\n\n  deleteBook = (bookId) => {\n    this.props.deleteBook(bookId);\n    setTimeout(() => {\n      if (this.props.bookObject != null) {\n        this.setState({ show: true });\n        setTimeout(() => this.setState({ show: false }), 3000);\n        this.findAllBooks(this.state.currentPage);\n      } else {\n        this.setState({ show: false });\n      }\n    }, 1000);\n  };\n\n  changePage = (event) => {\n    let targetPage = parseInt(event.target.value);\n    if (this.state.search) {\n      this.searchData(targetPage);\n    } else {\n      this.findAllBooks(targetPage);\n    }\n    this.setState({\n      [event.target.name]: targetPage,\n    });\n  };\n\n  firstPage = () => {\n    let firstPage = 1;\n    if (this.state.currentPage > firstPage) {\n      if (this.state.search) {\n        this.searchData(firstPage);\n      } else {\n        this.findAllBooks(firstPage);\n      }\n    }\n  };\n\n  prevPage = () => {\n    let prevPage = 1;\n    if (this.state.currentPage > prevPage) {\n      if (this.state.search) {\n        this.searchData(this.state.currentPage - prevPage);\n      } else {\n        this.findAllBooks(this.state.currentPage - prevPage);\n      }\n    }\n  };\n\n  lastPage = () => {\n    let condition = Math.ceil(\n      this.state.totalElements / this.state.booksPerPage\n    );\n    if (this.state.currentPage < condition) {\n      if (this.state.search) {\n        this.searchData(condition);\n      } else {\n        this.findAllBooks(condition);\n      }\n    }\n  };\n\n  nextPage = () => {\n    if (\n      this.state.currentPage <\n      Math.ceil(this.state.totalElements / this.state.booksPerPage)\n    ) {\n      if (this.state.search) {\n        this.searchData(this.state.currentPage + 1);\n      } else {\n        this.findAllBooks(this.state.currentPage + 1);\n      }\n    }\n  };\n\n  searchChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  cancelSearch = () => {\n    this.setState({ search: \"\" });\n    this.findAllBooks(this.state.currentPage);\n  };\n\n  searchData = (currentPage) => {\n    currentPage -= 1;\n    axios\n      .get(\n        \"/rest/books/search/\" +\n          this.state.search +\n          \"?page=\" +\n          currentPage +\n          \"&size=\" +\n          this.state.booksPerPage\n      )\n      .then((response) => response.data)\n      .then((data) => {\n        this.setState({\n          books: data.content,\n          totalPages: data.totalPages,\n          totalElements: data.totalElements,\n          currentPage: data.number + 1,\n        });\n      });\n  };\n\n  render() {\n    const { books, currentPage, totalPages, search } = this.state;\n\n    return (\n      <div>\n        <div style={{ display: this.state.show ? \"block\" : \"none\" }}>\n          <MyToast\n            show={this.state.show}\n            message={\"Book Deleted Successfully.\"}\n            type={\"danger\"}\n          />\n        </div>\n        <Card className={\"border bg-light \"}>\n          <Card.Header>\n            <div style={{ float: \"left\" }}>\n              <FontAwesomeIcon icon={faList} /> Book List\n            </div>\n            <div style={{ float: \"right\" }}>\n              <InputGroup size=\"sm\">\n                <FormControl\n                  placeholder=\"Search\"\n                  name=\"search\"\n                  value={search}\n                  className={\"info-border \"}\n                  onChange={this.searchChange}\n                />\n                <InputGroup.Append>\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline-info\"\n                    type=\"button\"\n                    onClick={this.searchData}\n                  >\n                    <FontAwesomeIcon icon={faSearch} />\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline-secondary\"\n                    // style={{backgroundColor:\"white\", color:\"#FF6347\"}}\n                    type=\"button\"\n                    onClick={this.cancelSearch}\n                  >\n                    <FontAwesomeIcon icon={faTimes} />\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <Table bordered hover striped variant=\"light\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Author</th>\n                  <th>ISBN Number</th>\n                  <th onClick={this.sortData}>\n                    Price{\" \"}\n                    <div\n                      className={\n                        this.state.sortDir === \"asc\"\n                          ? \"arrow arrow-up\"\n                          : \"arrow arrow-down\"\n                      }\n                    >\n                      {\" \"}\n                    </div>\n                  </th>\n                  <th>Language</th>\n                  <th>Genre</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {books.length === 0 ? (\n                  <tr align=\"center\">\n                    <td colSpan=\"7\">No Books Available.</td>\n                  </tr>\n                ) : (\n                  books.map((book) => (\n                    <tr key={book.id}>\n                      <td>\n                        <Image\n                          src={book.coverPhotoURL}\n                          roundedCircle\n                          width=\"25\"\n                          height=\"25\"\n                        />{\" \"}\n                        {book.title}\n                      </td>\n                      <td>{book.author}</td>\n                      <td>{book.isbnNumber}</td>\n                      <td>{book.price}</td>\n                      <td>{book.language}</td>\n                      <td>{book.genre}</td>\n                      <td>\n                        <ButtonGroup>\n                          <Link\n                            to={\"edit/\" + book.id}\n                            className=\"btn btn-sm btn-outline-primary\"\n                          >\n                            <FontAwesomeIcon icon={faEdit} />\n                          </Link>{\"   \"}\n                          <Button\n                            size=\"sm\"\n                             variant=\"outline-secondary\"\n                            onClick={() => this.deleteBook(book.id)}\n                          >\n                            <FontAwesomeIcon icon={faTrash} />\n                          </Button>\n                        </ButtonGroup>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </Table>\n          </Card.Body>\n          {books.length > 0 ? (\n            <Card.Footer>\n              <div style={{ float: \"left\" }}>\n                Showing Page {currentPage} of {totalPages}\n              </div>\n              <div style={{ float: \"right\" }}>\n                <InputGroup size=\"sm\">\n                  <InputGroup.Prepend>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline-primary\"\n                      disabled={currentPage === 1 ? true : false}\n                      onClick={this.firstPage}\n                    >\n                      <FontAwesomeIcon icon={faFastBackward} /> First\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline-primary\"\n                      disabled={currentPage === 1 ? true : false}\n                      onClick={this.prevPage}\n                    >\n                      <FontAwesomeIcon icon={faStepBackward} /> Prev\n                    </Button>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    className={\"page-num\"}\n                    name=\"currentPage\"\n                    value={currentPage}\n                    onChange={this.changePage}\n                  />\n                  <InputGroup.Append>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline-primary\"\n                      disabled={currentPage === totalPages ? true : false}\n                      onClick={this.nextPage}\n                    >\n                      <FontAwesomeIcon icon={faStepForward} /> Next\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline-primary\"\n                      disabled={currentPage === totalPages ? true : false}\n                      onClick={this.lastPage}\n                    >\n                      <FontAwesomeIcon icon={faFastForward} /> Last\n                    </Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </div>\n            </Card.Footer>\n          ) : null}\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bookObject: state.book,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteBook: (bookId) => dispatch(deleteBook(bookId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../../services/index\";\n\nimport \"./../../assets/css/Style.css\";\nimport {\n  Card,\n  Table,\n  InputGroup,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUsers,\n  faStepBackward,\n  faFastBackward,\n  faStepForward,\n  faFastForward,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      currentPage: 1,\n      usersPerPage: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUsers();\n  }\n\n  changePage = (event) => {\n    this.setState({\n      [event.target.name]: parseInt(event.target.value),\n    });\n  };\n\n  firstPage = () => {\n    if (this.state.currentPage > 1) {\n      this.setState({\n        currentPage: 1,\n      });\n    }\n  };\n\n  prevPage = () => {\n    if (this.state.currentPage > 1) {\n      this.setState({\n        currentPage: this.state.currentPage - 1,\n      });\n    }\n  };\n\n  lastPage = () => {\n    let usersLength = this.props.userData.users.length;\n    if (\n      this.state.currentPage < Math.ceil(usersLength / this.state.usersPerPage)\n    ) {\n      this.setState({\n        currentPage: Math.ceil(usersLength / this.state.usersPerPage),\n      });\n    }\n  };\n\n  nextPage = () => {\n    if (\n      this.state.currentPage <\n      Math.ceil(this.props.userData.users.length / this.state.usersPerPage)\n    ) {\n      this.setState({\n        currentPage: this.state.currentPage + 1,\n      });\n    }\n  };\n\n  render() {\n    const { currentPage, usersPerPage } = this.state;\n    const lastIndex = currentPage * usersPerPage;\n    const firstIndex = lastIndex - usersPerPage;\n\n    const userData = this.props.userData;\n    const users = userData.users;\n    const currentUsers = users && users.slice(firstIndex, lastIndex);\n    const totalPages = users && users.length / usersPerPage;\n\n    return (\n      <div>\n        {userData.error ? (\n          <Alert variant=\"danger\">{userData.error}</Alert>\n        ) : (\n          <Card className={\"border \"}>\n            <Card.Header>\n              <FontAwesomeIcon icon={faUsers} /> User List\n            </Card.Header>\n            <Card.Body>\n              <Table bordered hover striped variant=\"light\">\n                <thead>\n                  <tr>\n                    <td>Name</td>\n                    <td>Email</td>\n                    <td>Address</td>\n                    <td>Created</td>\n                    <td>Balance</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {users.length === 0 ? (\n                    <tr align=\"center\">\n                      <td colSpan=\"6\">No Users Available</td>\n                    </tr>\n                  ) : (\n                    currentUsers.map((user, index) => (\n                      <tr key={index}>\n                        <td>\n                          {user.first} {user.last}\n                        </td>\n                        <td>{user.email}</td>\n                        <td>{user.address}</td>\n                        <td>{user.created}</td>\n                        <td>{user.balance}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </Table>\n            </Card.Body>\n            {users.length > 0 ? (\n              <Card.Footer>\n                <div style={{ float: \"left\" }}>\n                  Showing Page {currentPage} of {totalPages}\n                </div>\n                <div style={{ float: \"right\" }}>\n                  <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                      <Button\n                        type=\"button\"\n                        variant=\"primary\"\n                        disabled={currentPage === 1 ? true : false}\n                        onClick={this.firstPage}\n                      >\n                        <FontAwesomeIcon icon={faFastBackward} /> First\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        variant=\"outline-primary\"\n                        disabled={currentPage === 1 ? true : false}\n                        onClick={this.prevPage}\n                      >\n                        <FontAwesomeIcon icon={faStepBackward} /> Prev\n                      </Button>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      className={\"page-num \"}\n                      name=\"currentPage\"\n                      value={currentPage}\n                      onChange={this.changePage}\n                    />\n                    <InputGroup.Append>\n                      <Button\n                        type=\"button\"\n                        variant=\"outline-primary\"\n                        disabled={currentPage === totalPages ? true : false}\n                        onClick={this.nextPage}\n                      >\n                        <FontAwesomeIcon icon={faStepForward} /> Next\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        variant=\"primary\"\n                        disabled={currentPage === totalPages ? true : false}\n                        onClick={this.lastPage}\n                      >\n                        <FontAwesomeIcon icon={faFastForward} /> Last\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </div>\n              </Card.Footer>\n            ) : null}\n          </Card>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  InputGroup,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPhone,\n  faEnvelope,\n  faLock,\n  faUndo,\n  faUserPlus,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { registerUser } from \"../../services/index\";\nimport MyToast from \"../MyToast\";\n\nconst Register = (props) => {\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    mobile: \"\",\n  };\n\n  const [user, setUser] = useState(initialState);\n\n  const userChange = (event) => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const dispatch = useDispatch();\n\n  const saveUser = () => {\n    dispatch(registerUser(user))\n      .then((response) => {\n        setShow(true);\n        setMessage(response.message);\n        resetRegisterForm();\n        setTimeout(() => {\n          setShow(false);\n          props.history.push(\"/login\");\n        }, 2000);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const resetRegisterForm = () => {\n    setUser(initialState);\n  };\n\n  return (\n    <div>\n      <div style={{ display: show ? \"block\" : \"none\" }}>\n        <MyToast show={show} message={message} type={\"success\"} />\n      </div>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={5}>\n          <Card className={\"border  text-primary\"}  style={{ backgroundColor:\"#F8F8FF\"}}>\n            <Card.Header>\n              <FontAwesomeIcon icon={faUserPlus} /> Register\n            </Card.Header>\n            <Card.Body>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUser} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      autoComplete=\"off\"\n                      type=\"text\"\n                      name=\"name\"\n                      value={user.name}\n                      onChange={userChange}\n                      className={\" \"}\n                      placeholder=\"Enter Name\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      required\n                      autoComplete=\"off\"\n                      type=\"text\"\n                      name=\"email\"\n                      value={user.email}\n                      onChange={userChange}\n                      className={\"\"}\n                      placeholder=\"Enter Email Address\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faLock} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      required\n                      autoComplete=\"off\"\n                      type=\"password\"\n                      name=\"password\"\n                      value={user.password}\n                      onChange={userChange}\n                      className={\"\"}\n                      placeholder=\"Enter Password\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faPhone} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      autoComplete=\"off\"\n                      type=\"text\"\n                      name=\"mobile\"\n                      value={user.mobile}\n                      onChange={userChange}\n                      className={\"\"}\n                      placeholder=\"Enter Mobile Number\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n            </Card.Body>\n            <Card.Footer style={{ textAlign: \"right\" }}>\n              <Button\n                size=\"sm\"\n                type=\"button\"\n                // variant=\"success\"\n                style={{ backgroundColor: \"#000080\" }}\n                onClick={saveUser}\n                disabled={user.email.length === 0 || user.password.length === 0}\n              >\n                <FontAwesomeIcon icon={faUserPlus} /> Register\n              </Button>{\" \"}\n              <Button\n                size=\"sm\"\n                type=\"button\"\n                // variant=\"light\"\n                style={{ backgroundColor: \"#FFFACD\", color:\"blue\" }}\n                \n                onClick={resetRegisterForm}\n              >\n                <FontAwesomeIcon icon={faUndo} /> Reset\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  InputGroup,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSignInAlt,\n  faEnvelope,\n  faLock,\n  faUndo,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { authenticateUser } from \"../../services/index\";\n\nconst Login = (props) => {\n  const [error, setError] = useState();\n  const [show, setShow] = useState(true);\n\n  const initialState = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const [user, setUser] = useState(initialState);\n\n  const credentialChange = (event) => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const dispatch = useDispatch();\n\n  const validateUser = () => {\n    dispatch(authenticateUser(user.email, user.password))\n      .then((response) => {\n        console.log(response.data);\n        return props.history.push(\"/home\");\n      })\n      .catch((error) => {\n        console.log(error.message);\n        setShow(true);\n        resetLoginForm();\n        setError(\"Invalid email and password\");\n      });\n  };\n\n  const resetLoginForm = () => {\n    setUser(initialState);\n  };\n\n  return (\n    <Row className=\"justify-content-md-center\">\n      <Col xs={5}>\n        {show && props.message && (\n          <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n            {props.message}\n          </Alert>\n        )}\n        {show && error && (\n          <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n            {error}\n          </Alert>\n        )}\n        <Card className={\"border text-primary\"} style={{ backgroundColor:\"#F8F8FF\"}}>\n          <Card.Header>\n            <FontAwesomeIcon icon={faSignInAlt} /> Login\n          </Card.Header>\n          <Card.Body>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>\n                      <FontAwesomeIcon icon={faEnvelope} />\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    required\n                    autoComplete=\"off\"\n                    type=\"text\"\n                    name=\"email\"\n                    value={user.email}\n                    onChange={credentialChange}\n                    className={\"\"}\n                    placeholder=\"Enter Email Address\"\n                  />\n                </InputGroup>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>\n                      <FontAwesomeIcon icon={faLock} />\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    required\n                    autoComplete=\"off\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={user.password}\n                    onChange={credentialChange}\n                    className={\"\"}\n                    placeholder=\"Enter Password\"\n                  />\n                </InputGroup>\n              </Form.Group>\n            </Form.Row>\n          </Card.Body>\n          <Card.Footer style={{ textAlign: \"right\" }}>\n            <Button\n              size=\"sm\"\n              type=\"button\"\n              style={{ backgroundColor:\"#006400\"}}\n              onClick={validateUser}\n              disabled={user.email.length === 0 || user.password.length === 0}\n            >\n              <FontAwesomeIcon icon={faSignInAlt} /> Login\n            </Button>{\" \"}\n            <Button\n              size=\"sm\"\n              type=\"button\"\n              variant=\"outline-dark\"\n              style={{  backgroundColor:\"white\" }}\n              onClick={resetLoginForm}\n              disabled={user.email.length === 0 && user.password.length === 0}\n            >\n              <FontAwesomeIcon icon={faUndo} /> Reset\n            </Button>\n          </Card.Footer>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Navbar, Container, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  const [fullYear, setFullYear] = useState();\n\n  useEffect(() => {\n    setFullYear(new Date().getFullYear());\n  }, [fullYear]);\n\n  return (\n    <Navbar fixed=\"bottom\" bg=\"info\" variant=\"dark\">\n      <Container>\n        <Col lg={12} className=\"text-center text-white\">\n          <div>\n            {fullYear}-{fullYear + 1}, All Rights Reserved by Vikram\n          </div>\n        </Col>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nconst authToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default authToken;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport authToken from \"../utils/authToken\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Home = () => {\n  if (localStorage.jwtToken) {\n    authToken(localStorage.jwtToken);\n  }\n\n  const auth = useSelector((state) => state.auth);\n\n  return (\n    <Alert style={{ color: \"blue\", textAlign:\"center\", fontSize:\"30px\" }}>\n      Welcome {auth.username}\n    </Alert>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport NavigationBar from \"./components/NavigationBar\";\nimport Welcome from \"./components/Welcome\";\nimport Book from \"./components/Book/Book\";\nimport BookList from \"./components/Book/BookList\";\nimport UserList from \"./components/User/UserList\";\nimport Register from \"./components/User/Register\";\nimport Login from \"./components/User/Login\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./components/Home\";\n\nconst App = () => {\n  window.onbeforeunload = (event) => {\n    const e = event || window.event;\n    e.preventDefault();\n    if (e) {\n      e.returnValue = \"\";\n    }\n    return \"\";\n  };\n\n  return (\n    <Router>\n      <NavigationBar />\n      <Container>\n        <Row>\n          <Col lg={12} className={\"margin-top\"}>\n            <Switch>\n              <Route path=\"/\" exact component={Welcome} />\n              <Route path=\"/home\" exact component={Home} />\n              <Route path=\"/add\" exact component={Book} />\n              <Route path=\"/edit/:id\" exact component={Book} />\n              <Route path=\"/list\" exact component={BookList} />\n              <Route path=\"/users\" exact component={UserList} />\n              <Route path=\"/register\" exact component={Register} />\n              <Route path=\"/login\" exact component={Login} />\n              <Route\n                path=\"/logout\"\n                exact\n                component={() => (\n                  <Login message=\"User Logged Out Successfully.\" />\n                )}\n              />\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as UT from \"./userTypes\";\n\nconst initialState = {\n  users: [],\n  error: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UT.USER_REQUEST:\n      return {\n        ...state,\n      };\n    case UT.USER_SUCCESS:\n      return {\n        users: action.payload,\n        error: \"\",\n      };\n    case UT.USER_SAVED_SUCCESS:\n      return {\n        message: action.payload,\n        error: \"\",\n      };\n    case UT.USER_FAILURE:\n      return {\n        users: [],\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { LOGIN_REQUEST, LOGOUT_REQUEST, SUCCESS, FAILURE } from \"./authTypes\";\n\nconst initialState = {\n  username: \"\",\n  isLoggedIn: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n      };\n    case SUCCESS:\n    case FAILURE:\n      return {\n        username: action.payload.username,\n        isLoggedIn: action.payload.isLoggedIn,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as BT from \"./bookTypes\";\n\nconst initialState = {\n  book: \"\",\n  error: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BT.SAVE_BOOK_REQUEST:\n    case BT.FETCH_BOOK_REQUEST:\n    case BT.UPDATE_BOOK_REQUEST:\n    case BT.DELETE_BOOK_REQUEST:\n    case BT.FETCH_LANGUAGES_REQUEST:\n    case BT.FETCH_GENRES_REQUEST:\n      return {\n        ...state,\n      };\n    case BT.BOOK_SUCCESS:\n      return {\n        book: action.payload,\n        error: \"\",\n      };\n    case BT.BOOK_FAILURE:\n      return {\n        book: \"\",\n        error: action.payload,\n      };\n    case BT.LANGUAGES_SUCCESS:\n      return {\n        languages: action.payload,\n        error: \"\",\n      };\n    case BT.LANGUAGES_FAILURE:\n      return {\n        languages: \"\",\n        error: action.payload,\n      };\n    case BT.GENRES_SUCCESS:\n      return {\n        genres: action.payload,\n        error: \"\",\n      };\n    case BT.GENRES_FAILURE:\n      return {\n        genres: \"\",\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./user/userReducer\";\nimport authReducer from \"./user/auth/authReducer\";\nimport bookReducer from \"./book/bookReducer\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  book: bookReducer,\n  auth: authReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport store from './services/store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}